Here's an example of merging two linked lists in C:

```
#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *next;
};

struct node* merge_lists(struct node *head1, struct node *head2) {
    if (head1 == NULL) {
        return head2;
    }
    if (head2 == NULL) {
        return head1;
    }
    if (head1->data <= head2->data) {
        head1->next = merge_lists(head1->next, head2);
        return head1;
    }
    else {
        head2->next = merge_lists(head1, head2->next);
        return head2;
    }
}

void print_list(struct node *head) {
    struct node *temp = head;
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
}

int main() {
    struct node *head1 = NULL;
    struct node *head2 = NULL;
    struct node *merged_list = NULL;

    // create first linked list
    head1 = (struct node*)malloc(sizeof(struct node));
    head1->data = 1;
    head1->next = (struct node*)malloc(sizeof(struct node));
    head1->next->data = 2;
    head1->next->next = (struct node*)malloc(sizeof(struct node));
    head1->next->next->data = 4;
    head1->next->next->next = NULL;

    // create second linked list
    head2 = (struct node*)malloc(sizeof(struct node));
    head2->data = 1;
    head2->next = (struct node*)malloc(sizeof(struct node));
    head2->next->data = 3;
    head2->next->next = (struct node*)malloc(sizeof(struct node));
    head2->next->next->data = 4;
    head2->next->next->next = NULL;

    // merge the two linked lists
    merged_list = merge_lists(head1, head2);

    // print the merged list
    printf("Merged List : ");
    print_list(merged_list);

    return 0;
}
```
